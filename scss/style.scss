/*
sass에서 @for 문과 @each문의 차이점

@for은
특정 숫자를 반복시킨다고 하면,

@each는
어떠한 배열 안에 모아놓은 특정 변수들을
내가 원하는 변수명에다가 차례대로 대입하면서
반복문 안에서 사용할 수 있음.

@each를 사용할 때, in 이라는 키워드 뒤에
원하는 변수명에 들어갈 변수들을 차례대로 나열해서 작성해 줌.
숫자, 문자열 아무것이든 상관없음. 
물론 traversy 튜토리얼에서 했던 것처럼, 배열처럼 생긴 변수를 만들고, 그 배열을 in 다음에 두어도 됨.

-> 어쨋든 이렇게 하면 뒤에 나열한 변수들(혹은 배열 안에 담긴 변수들)을
내가 지정한 변수명에 순서대로 대입시켜줄 수 있음.
*/

@each $var in book, zoom, phone {
  // 항상 변수명을 문자열(클래스명, 파일명 등)로 넣을 때는 문자열 보간을 사용할 것!
  .ico_#{$var} {
    background: url(../images/#{$var}.png) no-repeat;
  }
}

// @each문을 응용해서 각 헤드라인 요소의 폰트 사이즈를 조절하기
// 이런 식으로 괄호 안에 배열변수처럼 값들을 넣어둘 수도 있음.
// 여기서는 오히려 js에서 key-value 쌍의 오브젝트처럼 사용한 것 같은데?
$heading: (
  h1: 30px,
  h2: 20px,
  h3: 15px,
);

// 이렇게 하면 $heading안에 저장한 '선택자: 값' 쌍들에서 선택자는 $elem에, 값은 $fs에 넣어줄 수 있음!
// 즉, 첫 번째 매개변수에는 선택자가, 두 번째 매개변수에는 값이 들어가게 된다는 뜻!
// 이런 식으로 반복문을 짜면 나중에 반복문을 건드리지 않아도, 배열 안의 값들만 수정해주면 나중에 재사용이 가능하겠지!
@each $elem, $fs in $heading {
  // $elem에 차례로 담기는 선택자들을 클래스명으로 문자열보간을 이용해서 넣어준 것!
  #{$elem} {
    font-size: $fs; // $fs에 차례로 담기는 값들을 font-size의 값으로 넣어준 것!
  }
}
